const articles = [
    {
        name: 'Dynamic-Routing',
        title: 'Dynamic Routes in Action',
        content: [
            `To illustrate dynamic routing, let's consider an e-commerce app. 
            Normally, pages in a web app are created and rendered by moving through
             different components. However, in the case of an e-commerce app, 
             creating pages for each individual product is not practical. 
             This is where dynamic routing comes in handy
             To illustrate dynamic routing, let’s consider an e-commerce app.
              Normally, pages in a web app are created and rendered by moving through 
              different components. 
              However, in the case of an e-commerce app, 
              creating pages for each individual product is not practical.
               This is where dynamic routing comes in handy.
            `,
        ]
    },    {
        name: 'learn-React',
        title: 'React 19 Beta is now available on npm!',
        content: [
            `React DOM: <form> Actions 
            Actions are also integrated with React 19’s new <form> features for react-dom. We’ve added support for passing functions as the action and formAction props of <form>, <input>, and <button> elements to automatically submit forms with Actions:
            
            <form action={actionFunction}>
            When a <form> Action succeeds, React will automatically reset the form for uncontrolled components. If you need to reset the <form> manually, you can call the new requestFormReset React DOM API.
            
            For more information, see the react-dom docs for <form>, <input>, and <button>.eact is a popular JavaScript library developed by Facebook for building user interfaces, particularly single-page applications where efficient data rendering is crucial. 
            It allows developers to create reusable UI components, which can handle the view layer of web and mobile apps.ne of React's core concepts is the virtual DOM, an in-memory representation of the real DOM elements generated by React components. When a component's state changes, React updates the virtual DOM first, then calculates the most efficient way to update the real DOM. This approach significantly enhances performance, as it minimizes the number of direct manipulations to the actual DOM, which can be time-consuming and slow, especially with complex interfaces. `,
        ]
    },   
    {
        name: 'nextjs',
        title: 'Learn NextJs',
        content: [
            `Next.js is a powerful React framework that enables developers to build high-performance web applications with ease. It offers a robust set of features, including server-side rendering (SSR) and static site generation (SSG), which help improve the loading times and SEO of web applications. By pre-rendering pages at build time or on the server, Next.js ensures that content is delivered quickly to users, enhancing the overall user experience.`,
            `One of the standout features of Next.js is its file-based routing system, which simplifies the creation of routes within an application. Developers can create routes by simply adding files and folders to the "pages" directory, making the structure of the application intuitive and easy to manage. Additionally, Next.js supports API routes, allowing developers to build backend functionality directly within the same project, streamlining the development process and reducing the need for separate backend services.`,
            `Next.js also excels in its support for modern web development practices and tools. It integrates seamlessly with CSS and Sass, supports TypeScript out of the box, and offers built-in optimization features such as image optimization and automatic code splitting. These capabilities, combined with a vibrant community and extensive documentation, make Next.js a preferred choice for developers looking to build scalable, maintainable, and performant web applications.`,
        ]
    }, 
    {
        name: 'mongoDB',
        title: 'MongoDB',
        content: [
            `MongoDB is a leading NoSQL database known for its flexibility and scalability, making it ideal for handling large volumes of unstructured or semi-structured data.
             Unlike traditional relational databases that use tables and rows, MongoDB stores data in flexible, JSON-like documents within collections.
              This document-oriented approach allows for more dynamic schemas, meaning fields can vary from document to document, and data structures can evolve over time without requiring a predefined schema.`,
            `MongoDB is a leading NoSQL database known for its flexibility and scalability, making it ideal for handling large volumes of unstructured or semi-structured data. Unlike traditional relational databases that use tables and rows, MongoDB stores data in flexible, JSON-like documents within collections. This document-oriented approach allows for more dynamic schemas, meaning fields can vary from document to document, and data structures can evolve over time without requiring a predefined schema.
A key feature of MongoDB is its ability to horizontally scale across many servers, supporting large-scale applications and big data projects. This is achieved through a process called sharding, where data is distributed across multiple machines. Each shard holds a subset of the data, and MongoDB automatically balances the data and load across shards, ensuring high availability and reliability. This architecture is particularly beneficial for applications experiencing rapid growth or unpredictable traffic patterns.`,
            `MongoDB also offers powerful querying and indexing capabilities, allowing for efficient data retrieval and manipulation. Its rich query language supports a wide range of operations, including CRUD (Create, Read, Update, Delete) actions, aggregation, and text search. Indexing can be applied to any field in a document, significantly speeding up query performance. Additionally, MongoDB's support for transactions, ACID (Atomicity, Consistency, Isolation, Durability) compliance, and its robust security features, such as encryption and authentication, make it a versatile and secure choice for modern database needs.`,
        ]
    }, 
];

export default articles;